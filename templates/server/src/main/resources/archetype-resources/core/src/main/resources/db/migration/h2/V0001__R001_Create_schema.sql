-- This is the SQL script for setting up the DDL for the h2 database
-- In a typical project you would only distinguish between main and test for flyway SQLs
-- However, in this sample application we provde support for multiple databases in parallel
-- You can simply choose the DB of your choice by setting spring.profiles.active=XXX in config/application.properties
-- Assuming that the preconfigured user exists with according credentials using the included SQLs

CREATE SEQUENCE HIBERNATE_SEQUENCE START WITH 1000000;

-- *** Staffmemeber ***
CREATE TABLE StaffMember(
  id BIGINT NOT NULL,
  modificationCounter INTEGER NOT NULL,
  firstname VARCHAR(255),
  lastname VARCHAR(255),
  login VARCHAR(255),
  role INTEGER
);
ALTER TABLE StaffMember ADD CONSTRAINT PK_StaffMember PRIMARY KEY(id);
ALTER TABLE StaffMember ADD CONSTRAINT UC_StaffMember_LOGIN UNIQUE(login);

-- *** Product ***
CREATE TABLE Product(
  dtype VARCHAR(31) NOT NULL,
  id BIGINT NOT NULL,
  modificationCounter INTEGER NOT NULL,
  description VARCHAR(255),
  name VARCHAR(255),
  alcoholic BOOLEAN,
  pictureId BIGINT
);
ALTER TABLE Product ADD CONSTRAINT PK_Product PRIMARY KEY(id);
CREATE TABLE Product_AUD(
  revtype TINYINT,
  description VARCHAR(255),
  name VARCHAR(255),
  pictureId BIGINT,
  alcoholic BOOLEAN,
  dtype VARCHAR(31) NOT NULL,
  id BIGINT NOT NULL,
  rev BIGINT NOT NULL
);

-- *** Offer ***
CREATE TABLE Offer(
  id BIGINT NOT NULL,
  modificationCounter INTEGER NOT NULL,
  description VARCHAR(255),
  name VARCHAR(255),
  price DECIMAL(19, 2),
  number BIGINT,
  state INTEGER,
  drink_id BIGINT,
  meal_id BIGINT,
  sideDish_id BIGINT
);
ALTER TABLE Offer ADD CONSTRAINT PK_Offer PRIMARY KEY(id);
ALTER TABLE Offer ADD CONSTRAINT UC_Offer_NAME UNIQUE(name);
ALTER TABLE Offer ADD CONSTRAINT UC_Offer_NUMBER UNIQUE(number);
ALTER TABLE Offer ADD CONSTRAINT FK_Offer2SIDEDISH FOREIGN KEY(sideDish_id) REFERENCES Product(id) NOCHECK;
ALTER TABLE Offer ADD CONSTRAINT FK_Offer2MEAL FOREIGN KEY(meal_id) REFERENCES Product(id) NOCHECK;
ALTER TABLE Offer ADD CONSTRAINT FK_Offer2DRINK FOREIGN KEY(drink_id) REFERENCES Product(id) NOCHECK;

-- *** RestaurantTable (Table is a reserved keyword in Oracle) ***
CREATE TABLE RestaurantTable(
  id BIGINT NOT NULL,
  modificationCounter INTEGER NOT NULL,
  number BIGINT NOT NULL CHECK (NUMBER >= 0),
  state INTEGER,
  waiter_id BIGINT
);
ALTER TABLE RestaurantTable ADD CONSTRAINT PK_RestaurantTable PRIMARY KEY(id);
ALTER TABLE RestaurantTable ADD CONSTRAINT UC_TABLE_NUMBER UNIQUE(number);

-- *** RestaurantOrder (Order is a reserved keyword in Oracle) ***
CREATE TABLE RestaurantOrder(
  id BIGINT NOT NULL,
  modificationCounter INTEGER NOT NULL,
  state INTEGER,
  table_id BIGINT NOT NULL
);
ALTER TABLE RestaurantOrder ADD CONSTRAINT PK_RestaurantOrder PRIMARY KEY(id);

-- *** OrderPosition ***
CREATE TABLE OrderPosition(
  id BIGINT NOT NULL,
  modificationCounter INTEGER NOT NULL,
  comment VARCHAR(255),
  cook_id BIGINT,
  offer_id BIGINT,
  offerName VARCHAR(255),
  price DECIMAL(19, 2),
  state INTEGER,
  drinkState INTEGER,
  order_id BIGINT
);
ALTER TABLE OrderPosition ADD CONSTRAINT PK_OrderPosition PRIMARY KEY(id);
ALTER TABLE OrderPosition ADD CONSTRAINT FK_ORDPOS2ORDER FOREIGN KEY(order_id) REFERENCES RestaurantOrder(id) NOCHECK;
ALTER TABLE OrderPosition ADD CONSTRAINT FK_ORDPOS2COOK FOREIGN KEY(cook_id) REFERENCES StaffMember(id) NOCHECK;

-- *** Bill ***
CREATE TABLE Bill(
  id BIGINT NOT NULL,
  modificationCounter INTEGER NOT NULL,
  payed BOOLEAN NOT NULL,
  tip DECIMAL(19, 2),
  total DECIMAL(19, 2)
);
ALTER TABLE Bill ADD CONSTRAINT PK_Bill PRIMARY KEY(id);
CREATE TABLE Bill_OrderPosition(
  bill_id BIGINT NOT NULL,
  orderpositions_id BIGINT NOT NULL
);
ALTER TABLE Bill_OrderPosition ADD CONSTRAINT FK_BillORDPOS2Bill FOREIGN KEY(bill_id) REFERENCES Bill(id) NOCHECK;
ALTER TABLE Bill_OrderPosition ADD CONSTRAINT FK_BillORDPOS2ORDPOS FOREIGN KEY(orderPositions_ID) REFERENCES OrderPosition(id) NOCHECK;

-- *** BinaryObject (BLOBs) ***
CREATE TABLE BinaryObject (
  id BIGINT NOT NULL,
  modificationCounter INTEGER NOT NULL,
  data BLOB(2147483647),
  size BIGINT NOT NULL,
  mimetype VARCHAR(255),
  PRIMARY KEY (ID)
);

-- *** RevInfo (Commit log for envers audit trail) ***
CREATE TABLE RevInfo(
  id BIGINT NOT NULL generated by default as identity (start with 1),
  timestamp BIGINT NOT NULL,
  user VARCHAR(255)
);

